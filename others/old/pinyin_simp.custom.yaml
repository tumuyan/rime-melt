# Rime
# encoding: utf-8
#
# 袖珍简化字拼音自定义配置
#
# Neko7ina <hua199057+Rime@gmail.com>
# tumuyan，in 2020.08.20
#
# 部署位置：
# ~/.config/ibus/rime  (Linux)
# ~/Library/Rime  (Mac OS)
# %APPDATA%\Rime  (Windows)
#
# 编辑完后重新部署才会生效

patch:
  # 導入英文輸入方案easy_en
  # 如果直接改寫方案，在文件頂端寫__patch:easy_en:/patch?
  # __include: easy_en:/patch?
  
  # 引入方案把笔画替换为英语
  "schema/dependencies/@0": melt_eng
  "engine/translators/@before 0": table_translator@melt_eng
  schema/keyboard:
    layout: 26
    label: default
  melt_eng:
    dictionary: melt_eng
    spelling_hints: 9
    enable_completion: true
    enable_sentence: false
    initial_quality: -1
  # 關閉外語自造詞，節約候選詞列表
  easy_en/enable_sentence: false
  # 令输入方案对大写字母、部分符号生效
  "speller/alphabet": zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA-_=
  "speller/initials": zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
#  处理混拼词条
  "speller/algebra/@before0": derive/^(.+)$/\L$1/
  "speller/algebra/@0": abbrev/^_?([a-zA-Z]).*$/$1/
#  "speller/algebra/@next2": abbrev/_([a-zA-Z])(.*)/$\L1/
  "speller/algebra/@next3": abbrev/^_(.+)$/$1/
#  "speller/algebra/@next4": abbrev/_(.+)/\L$1/
  recognizer/patterns/uppercase: ''
  "key_binder/bindings":
    - {accept: minus, send: '-', when: has_menu}
    - {accept: equal, send: "=", when: has_menu}
    - {accept: "Control+Shift+space", toggle: simplification, when: always}
    - {accept: "Control+Shift+P", toggle: show_pinyin, when: composing}
# 显示候选词和方案名称
  "menu/page_size": 10
  "schema/name": 融合拼音
# 语言模型数据包
#  __include: grammar:/hans
# 设置主词典
  "translator/dictionary": pinyin_simp.main
# 候选去重
  engine/filters:
    - simplifier@s2t_conversion
    - simplifier@show_pinyin
    - lua_filter@autocap_filter
    - lua_filter@long_word_filter
    - lua_filter@oo_filter
    - uniquifier
# 默认输入状态为中文
  "switches/@0/reset": 0
# 开启拼音纠错
  translator/enable_correction: false
# 自定义标点
# 固定候选单字，在用户目录下创建 pinyin_simp_pin.txt 文件并编辑
  "engine/translators/@next1": table_translator@pinyin_simp_pin
  "engine/translators/@next2": lua_translator@get_date
  "engine/processors/@before 0": lua_processor@oo_processor
  
  pinyin_simp_pin:
    dictionary: ""
    user_dict: pinyin_simp_pin
    db_class: stabledb
    enable_completion: false
    enable_sentence: false
    initial_quality: 1
# 释放「`」键（同时关闭反查）
#  "recognizer/patterns/reverse_lookup": {}
#  "reverse_lookup/prefix": "`V"
#  "punctuator/full_shape/=" : '='
#  "punctuator/half_shape" : ''
#  punctuator/half_shape/= : =
  "reverse_lookup/dictionary": liangfen
  "reverse_lookup/tips": 〔两分〕
  "reverse_lookup/preedit_format": "xlit|v|ü"
    
  "switches/@next1": 
    name: simplification
    reset: 0
    states: [简体,繁體]
  "switches/@next2": 
    name: show_pinyin
    reset: 0
    states: [滤镜,拼音]
  s2t_conversion:
    opencc_config: s2t.json
    option_name: simplification
  show_pinyin:
    opencc_config: pinyin.json
    option_name: show_pinyin
    show_in_comment: true
    comment_format:
      - "xform/&nbsp/ /"
#      - "xform/<br>/\r\n/"
#      - "xform/<br>/\r/"
#    - "xform/<br>/\r/"  #编码滤镜内容换行。注意: 如果用于小狼毫,请将\n改为\r,否则无效
    tips: all